import static org.junit.Assert.*;

import java.util.List;
import java.util.Map;

import org.junit.Test;

public class TestCases {

	@Test
	public void test() {
		long[] test1 = {1,1,1,1,1,1,1,1,1}; //determinant = 0
		long[] test2 = {0,1,2,3,4,5,6,7,8}; //determinant = 0
		long[] test3 = {2,4,6,8,10,12,14,16,18}; // determinant = 0
		long[] test4 = {1,2,1,2,1,2,1,2,1}; //determinant = 0
		long[] test5 = {8,7,6,5,4,3,2,1,0}; //determinant = 0
		long[] test6 = {5,1,7,5,7,8,5,1,2}; //determinant = -150
		long[] test7 = {2,1,6,7,8,5,3,3,3}; //,determinant = -6
		long[] test8 = {5,8,4,6,7,2,5,7,9}; //determinant = -79
		long[] test9 = {6,2,4,2,6,7,3,5,8}; //determinant = 56
		long[] test10= {-1,6,89,5,24,6,5,89,14}; //determinant = 28883
		
		//first set of blocks below have 60 test cases total, verify each matrix gives correct answer
		//explanation: 6 methods * 10 test matrices = 60 test cases
		Matrix3x3flat m1T1 = new Matrix3x3flat(test1);
		Matrix3x3rc m2T1 = new Matrix3x3rc(test1);
		Matrix3x3cr m3T1 = new Matrix3x3cr(test1);
		MatrixArrayFlat m4T1 = new MatrixArrayFlat(test1);
		MatrixArrayRC m5T1 = new MatrixArrayRC(test1);
		MatrixArrayCR m6T1 = new MatrixArrayCR(test1);
		assertEquals(m1T1.determinant(),0);
		assertEquals(m2T1.determinant(),0); 
		assertEquals(m3T1.determinant(),0); 
		assertEquals(m4T1.determinant(),0); 
		assertEquals(m5T1.determinant(),0); 
		assertEquals(m6T1.determinant(),0); 
		
		Matrix3x3flat m1T2 = new Matrix3x3flat(test2);       		
		Matrix3x3rc m2T2 = new Matrix3x3rc(test2);           		
		Matrix3x3cr m3T2 = new Matrix3x3cr(test2);           		
		MatrixArrayFlat m4T2 = new MatrixArrayFlat(test2);   		
		MatrixArrayRC m5T2 = new MatrixArrayRC(test2);       		
		MatrixArrayCR m6T2 = new MatrixArrayCR(test2);       		                                                     		
		assertEquals(m1T2.determinant(),0);                  		
		assertEquals(m2T2.determinant(),0);                  		
		assertEquals(m3T2.determinant(),0);                  		
		assertEquals(m4T2.determinant(),0);                  		
		assertEquals(m5T2.determinant(),0);                  		
		assertEquals(m6T2.determinant(),0);                  		
		                                                     		
		Matrix3x3flat m1T3 = new Matrix3x3flat(test3);     
		Matrix3x3rc m2T3 = new Matrix3x3rc(test3);         
		Matrix3x3cr m3T3 = new Matrix3x3cr(test3);         
		MatrixArrayFlat m4T3 = new MatrixArrayFlat(test3); 
		MatrixArrayRC m5T3 = new MatrixArrayRC(test3);     
		MatrixArrayCR m6T3 = new MatrixArrayCR(test3);                                                        
		assertEquals(m1T3.determinant(),0);                
		assertEquals(m2T3.determinant(),0);                
		assertEquals(m3T3.determinant(),0);                
		assertEquals(m4T3.determinant(),0);                
		assertEquals(m5T3.determinant(),0);                
		assertEquals(m6T3.determinant(),0);                
		
		Matrix3x3flat m1T4 = new Matrix3x3flat(test4);    
		Matrix3x3rc m2T4 = new Matrix3x3rc(test4);        		
		Matrix3x3cr m3T4 = new Matrix3x3cr(test4);        		
		MatrixArrayFlat m4T4 = new MatrixArrayFlat(test4);		
		MatrixArrayRC m5T4 = new MatrixArrayRC(test4);    		
		MatrixArrayCR m6T4 = new MatrixArrayCR(test4);    		
		assertEquals(m1T4.determinant(),0);               		
		assertEquals(m2T4.determinant(),0);               		
		assertEquals(m3T4.determinant(),0);               		
		assertEquals(m4T4.determinant(),0);               		
		assertEquals(m5T4.determinant(),0);               		
		assertEquals(m6T4.determinant(),0);       
	
		Matrix3x3flat m1T5 = new Matrix3x3flat(test5);    
        Matrix3x3rc m2T5 = new Matrix3x3rc(test5);        
		Matrix3x3cr m3T5 = new Matrix3x3cr(test5);        
		MatrixArrayFlat m4T5 = new MatrixArrayFlat(test5);
		MatrixArrayRC m5T5 = new MatrixArrayRC(test5);    
		MatrixArrayCR m6T5 = new MatrixArrayCR(test5);    
		assertEquals(m1T5.determinant(),0);               
        assertEquals(m2T5.determinant(),0);               
		assertEquals(m3T5.determinant(),0);               
		assertEquals(m4T5.determinant(),0);               
		assertEquals(m5T5.determinant(),0);               
		assertEquals(m6T5.determinant(),0);               
		
		Matrix3x3flat m1T6 = new Matrix3x3flat(test6);    
		Matrix3x3rc m2T6 = new Matrix3x3rc(test6);        
		Matrix3x3cr m3T6 = new Matrix3x3cr(test6);        
		MatrixArrayFlat m4T6 = new MatrixArrayFlat(test6);
		MatrixArrayRC m5T6 = new MatrixArrayRC(test6);    
		MatrixArrayCR m6T6 = new MatrixArrayCR(test6);    
		assertEquals(m1T6.determinant(),-150);               
		assertEquals(m2T6.determinant(),-150);               
		assertEquals(m3T6.determinant(),-150);               
		assertEquals(m4T6.determinant(),-150);               
		assertEquals(m5T6.determinant(),-150);               
		assertEquals(m6T6.determinant(),-150);               
		
		Matrix3x3flat m1T7 = new Matrix3x3flat(test7);    
		Matrix3x3rc m2T7 = new Matrix3x3rc(test7);        
		Matrix3x3cr m3T7 = new Matrix3x3cr(test7);        
		MatrixArrayFlat m4T7 = new MatrixArrayFlat(test7);
		MatrixArrayRC m5T7 = new MatrixArrayRC(test7);    
		MatrixArrayCR m6T7 = new MatrixArrayCR(test7);    
		assertEquals(m1T7.determinant(),-6);               
		assertEquals(m2T7.determinant(),-6);               
		assertEquals(m3T7.determinant(),-6);               
		assertEquals(m4T7.determinant(),-6);               
		assertEquals(m5T7.determinant(),-6);               
		assertEquals(m6T7.determinant(),-6);  
		
		Matrix3x3flat m1T8 = new Matrix3x3flat(test8);    
		Matrix3x3rc m2T8 = new Matrix3x3rc(test8);        
		Matrix3x3cr m3T8 = new Matrix3x3cr(test8);        
		MatrixArrayFlat m4T8 = new MatrixArrayFlat(test8);
		MatrixArrayRC m5T8 = new MatrixArrayRC(test8);    
		MatrixArrayCR m6T8 = new MatrixArrayCR(test8);    
		assertEquals(m1T8.determinant(),-79);               
		assertEquals(m2T8.determinant(),-79);               
		assertEquals(m3T8.determinant(),-79);               
		assertEquals(m4T8.determinant(),-79);               
		assertEquals(m5T8.determinant(),-79);               
		assertEquals(m6T8.determinant(),-79);               
		
		Matrix3x3flat m1T9 = new Matrix3x3flat(test9);    
		Matrix3x3rc m2T9 = new Matrix3x3rc(test9);        
		Matrix3x3cr m3T9 = new Matrix3x3cr(test9);        
		MatrixArrayFlat m4T9 = new MatrixArrayFlat(test9);
		MatrixArrayRC m5T9 = new MatrixArrayRC(test9);    
		MatrixArrayCR m6T9 = new MatrixArrayCR(test9);    
		assertEquals(m1T9.determinant(),56);               
		assertEquals(m2T9.determinant(),56);               
		assertEquals(m3T9.determinant(),56);               
		assertEquals(m4T9.determinant(),56);               
		assertEquals(m5T9.determinant(),56);               
		assertEquals(m6T9.determinant(),56); 
		
		Matrix3x3flat m1T10 = new Matrix3x3flat(test10);    
		Matrix3x3rc m2T10 = new Matrix3x3rc(test10);        
		Matrix3x3cr m3T10 = new Matrix3x3cr(test10);        
		MatrixArrayFlat m4T10 = new MatrixArrayFlat(test10);
		MatrixArrayRC m5T10 = new MatrixArrayRC(test10);    
		MatrixArrayCR m6T10 = new MatrixArrayCR(test10);    
		assertEquals(m1T10.determinant(),28883);               
		assertEquals(m2T10.determinant(),28883);               
		assertEquals(m3T10.determinant(),28883);               
		assertEquals(m4T10.determinant(),28883);               
		assertEquals(m5T10.determinant(),28883);               
		assertEquals(m6T10.determinant(),28883);               
		
		//second set of blocks below have 360 test cases, which checks all possible pairs of methods
		//explanation: 10 test cases * 6 method A * 6 method B, where A and B can be any of the 6 methods
		
		Matrix3x3flat m1A = new Matrix3x3flat(test1);    
		Matrix3x3rc m2A = new Matrix3x3rc(test1);        
		Matrix3x3cr m3A = new Matrix3x3cr(test1);        
		MatrixArrayFlat m4A = new MatrixArrayFlat(test1);
		MatrixArrayRC m5A = new MatrixArrayRC(test1);    
		MatrixArrayCR m6A = new MatrixArrayCR(test1);    
		assertEquals(m1A.determinant(),m1A.determinant());
		assertEquals(m1A.determinant(),m2A.determinant());
		assertEquals(m1A.determinant(),m3A.determinant());
		assertEquals(m1A.determinant(),m4A.determinant());
		assertEquals(m1A.determinant(),m5A.determinant());
		assertEquals(m1A.determinant(),m6A.determinant());  
		assertEquals(m2A.determinant(),m1A.determinant());
		assertEquals(m2A.determinant(),m2A.determinant());
		assertEquals(m2A.determinant(),m3A.determinant());
		assertEquals(m2A.determinant(),m4A.determinant());
		assertEquals(m2A.determinant(),m5A.determinant());
		assertEquals(m2A.determinant(),m6A.determinant());  	
		assertEquals(m3A.determinant(),m1A.determinant());
		assertEquals(m3A.determinant(),m2A.determinant());
		assertEquals(m3A.determinant(),m3A.determinant());
		assertEquals(m3A.determinant(),m4A.determinant());
		assertEquals(m3A.determinant(),m5A.determinant());
		assertEquals(m3A.determinant(),m6A.determinant());  		
		assertEquals(m4A.determinant(),m1A.determinant());
		assertEquals(m4A.determinant(),m2A.determinant());
		assertEquals(m4A.determinant(),m3A.determinant());
		assertEquals(m4A.determinant(),m4A.determinant());
		assertEquals(m4A.determinant(),m5A.determinant());
		assertEquals(m4A.determinant(),m6A.determinant());  
		assertEquals(m5A.determinant(),m1A.determinant());
		assertEquals(m5A.determinant(),m2A.determinant());
		assertEquals(m5A.determinant(),m3A.determinant());
		assertEquals(m5A.determinant(),m4A.determinant());
		assertEquals(m5A.determinant(),m5A.determinant());
		assertEquals(m5A.determinant(),m6A.determinant());  	
		assertEquals(m6A.determinant(),m1A.determinant());
		assertEquals(m6A.determinant(),m2A.determinant());
		assertEquals(m6A.determinant(),m3A.determinant());
		assertEquals(m6A.determinant(),m4A.determinant());
		assertEquals(m6A.determinant(),m5A.determinant());
		assertEquals(m6A.determinant(),m6A.determinant());  
		
		Matrix3x3flat m1B = new Matrix3x3flat(test2);     
		Matrix3x3rc m2B = new Matrix3x3rc(test2);         
		Matrix3x3cr m3B = new Matrix3x3cr(test2);         
		MatrixArrayFlat m4B = new MatrixArrayFlat(test2); 
		MatrixArrayRC m5B = new MatrixArrayRC(test2);     
		MatrixArrayCR m6B = new MatrixArrayCR(test2);     
		assertEquals(m1B.determinant(),m1B.determinant());
		assertEquals(m1B.determinant(),m2B.determinant());
		assertEquals(m1B.determinant(),m3B.determinant());
		assertEquals(m1B.determinant(),m4B.determinant());
		assertEquals(m1B.determinant(),m5B.determinant());
		assertEquals(m1B.determinant(),m6B.determinant());
		assertEquals(m2B.determinant(),m1B.determinant());
		assertEquals(m2B.determinant(),m2B.determinant());
		assertEquals(m2B.determinant(),m3B.determinant());
		assertEquals(m2B.determinant(),m4B.determinant());
		assertEquals(m2B.determinant(),m5B.determinant());
		assertEquals(m2B.determinant(),m6B.determinant());
		assertEquals(m3B.determinant(),m1B.determinant());
		assertEquals(m3B.determinant(),m2B.determinant());
		assertEquals(m3B.determinant(),m3B.determinant());
		assertEquals(m3B.determinant(),m4B.determinant());
		assertEquals(m3B.determinant(),m5B.determinant());
		assertEquals(m3B.determinant(),m6B.determinant());
		assertEquals(m4B.determinant(),m1B.determinant());
		assertEquals(m4B.determinant(),m2B.determinant());
		assertEquals(m4B.determinant(),m3B.determinant());
		assertEquals(m4B.determinant(),m4B.determinant());
		assertEquals(m4B.determinant(),m5B.determinant());
		assertEquals(m4B.determinant(),m6B.determinant());
		assertEquals(m5B.determinant(),m1B.determinant());
		assertEquals(m5B.determinant(),m2B.determinant());
		assertEquals(m5B.determinant(),m3B.determinant());
		assertEquals(m5B.determinant(),m4B.determinant());
		assertEquals(m5B.determinant(),m5B.determinant());
		assertEquals(m5B.determinant(),m6B.determinant());
		assertEquals(m6B.determinant(),m1B.determinant());
		assertEquals(m6B.determinant(),m2B.determinant());
		assertEquals(m6B.determinant(),m3B.determinant());
		assertEquals(m6B.determinant(),m4B.determinant());
		assertEquals(m6B.determinant(),m5B.determinant());
		assertEquals(m6B.determinant(),m6B.determinant());
		
		Matrix3x3flat m1C = new Matrix3x3flat(test3);     
		Matrix3x3rc m2C = new Matrix3x3rc(test3);         
		Matrix3x3cr m3C = new Matrix3x3cr(test3);         
		MatrixArrayFlat m4C = new MatrixArrayFlat(test3); 
		MatrixArrayRC m5C = new MatrixArrayRC(test3);     
		MatrixArrayCR m6C = new MatrixArrayCR(test3);     
		assertEquals(m1C.determinant(),m1C.determinant());
		assertEquals(m1C.determinant(),m2C.determinant());
		assertEquals(m1C.determinant(),m3C.determinant());
		assertEquals(m1C.determinant(),m4C.determinant());
		assertEquals(m1C.determinant(),m5C.determinant());
		assertEquals(m1C.determinant(),m6C.determinant());
		assertEquals(m2C.determinant(),m1C.determinant());
		assertEquals(m2C.determinant(),m2C.determinant());
		assertEquals(m2C.determinant(),m3C.determinant());
		assertEquals(m2C.determinant(),m4C.determinant());
		assertEquals(m2C.determinant(),m5C.determinant());
		assertEquals(m2C.determinant(),m6C.determinant());
		assertEquals(m3C.determinant(),m1C.determinant());
		assertEquals(m3C.determinant(),m2C.determinant());
		assertEquals(m3C.determinant(),m3C.determinant());
		assertEquals(m3C.determinant(),m4C.determinant());
		assertEquals(m3C.determinant(),m5C.determinant());
		assertEquals(m3C.determinant(),m6C.determinant());
		assertEquals(m4C.determinant(),m1C.determinant());
		assertEquals(m4C.determinant(),m2C.determinant());
		assertEquals(m4C.determinant(),m3C.determinant());
		assertEquals(m4C.determinant(),m4C.determinant());
		assertEquals(m4C.determinant(),m5C.determinant());
	    assertEquals(m4C.determinant(),m6C.determinant());
        assertEquals(m5C.determinant(),m1C.determinant());
        assertEquals(m5C.determinant(),m2C.determinant());
        assertEquals(m5C.determinant(),m3C.determinant());        assertEquals(m5C.determinant(),m4C.determinant());        assertEquals(m5C.determinant(),m5C.determinant());        assertEquals(m5C.determinant(),m6C.determinant());        assertEquals(m6C.determinant(),m1C.determinant());        assertEquals(m6C.determinant(),m2C.determinant());        assertEquals(m6C.determinant(),m3C.determinant());        assertEquals(m6C.determinant(),m4C.determinant());        assertEquals(m6C.determinant(),m5C.determinant());        assertEquals(m6C.determinant(),m6C.determinant());
        
		Matrix3x3flat m1D = new Matrix3x3flat(test4);     
		Matrix3x3rc m2D = new Matrix3x3rc(test4);         
		Matrix3x3cr m3D = new Matrix3x3cr(test4);         
		MatrixArrayFlat m4D = new MatrixArrayFlat(test4); 
		MatrixArrayRC m5D = new MatrixArrayRC(test4);     
		MatrixArrayCR m6D = new MatrixArrayCR(test4);     
		assertEquals(m1D.determinant(),m1D.determinant());
		assertEquals(m1D.determinant(),m2D.determinant());
		assertEquals(m1D.determinant(),m3D.determinant());
		assertEquals(m1D.determinant(),m4D.determinant());
		assertEquals(m1D.determinant(),m5D.determinant());
		assertEquals(m1D.determinant(),m6D.determinant());
		assertEquals(m2D.determinant(),m1D.determinant());
		assertEquals(m2D.determinant(),m2D.determinant());
		assertEquals(m2D.determinant(),m3D.determinant());
		assertEquals(m2D.determinant(),m4D.determinant());
		assertEquals(m2D.determinant(),m5D.determinant());
		assertEquals(m2D.determinant(),m6D.determinant());
		assertEquals(m3D.determinant(),m1D.determinant());
		assertEquals(m3D.determinant(),m2D.determinant());
		assertEquals(m3D.determinant(),m3D.determinant());
		assertEquals(m3D.determinant(),m4D.determinant());
		assertEquals(m3D.determinant(),m5D.determinant());
		assertEquals(m3D.determinant(),m6D.determinant());
		assertEquals(m4D.determinant(),m1D.determinant());
		assertEquals(m4D.determinant(),m2D.determinant());
		assertEquals(m4D.determinant(),m3D.determinant());
		assertEquals(m4D.determinant(),m4D.determinant());
		assertEquals(m4D.determinant(),m5D.determinant());
	    assertEquals(m4D.determinant(),m6D.determinant());
        assertEquals(m5D.determinant(),m1D.determinant());
        assertEquals(m5D.determinant(),m2D.determinant());
        assertEquals(m5D.determinant(),m3D.determinant());
        assertEquals(m5D.determinant(),m4D.determinant());
        assertEquals(m5D.determinant(),m5D.determinant());
        assertEquals(m5D.determinant(),m6D.determinant());
        assertEquals(m6D.determinant(),m1D.determinant());
        assertEquals(m6D.determinant(),m2D.determinant());
        assertEquals(m6D.determinant(),m3D.determinant());
        assertEquals(m6D.determinant(),m4D.determinant());
        assertEquals(m6D.determinant(),m5D.determinant());
        assertEquals(m6D.determinant(),m6D.determinant());
        
		Matrix3x3flat m1E = new Matrix3x3flat(test5);     
		Matrix3x3rc m2E = new Matrix3x3rc(test5);         
		Matrix3x3cr m3E = new Matrix3x3cr(test5);         
		MatrixArrayFlat m4E = new MatrixArrayFlat(test5); 
		MatrixArrayRC m5E = new MatrixArrayRC(test5);     
		MatrixArrayCR m6E = new MatrixArrayCR(test5);     
		assertEquals(m1E.determinant(),m1E.determinant());
		assertEquals(m1E.determinant(),m2E.determinant());
		assertEquals(m1E.determinant(),m3E.determinant());
		assertEquals(m1E.determinant(),m4E.determinant());
		assertEquals(m1E.determinant(),m5E.determinant());
		assertEquals(m1E.determinant(),m6E.determinant());
		assertEquals(m2E.determinant(),m1E.determinant());
		assertEquals(m2E.determinant(),m2E.determinant());
		assertEquals(m2E.determinant(),m3E.determinant());
		assertEquals(m2E.determinant(),m4E.determinant());
		assertEquals(m2E.determinant(),m5E.determinant());
		assertEquals(m2E.determinant(),m6E.determinant());
		assertEquals(m3E.determinant(),m1E.determinant());
		assertEquals(m3E.determinant(),m2E.determinant());
		assertEquals(m3E.determinant(),m3E.determinant());
		assertEquals(m3E.determinant(),m4E.determinant());
		assertEquals(m3E.determinant(),m5E.determinant());
		assertEquals(m3E.determinant(),m6E.determinant());
		assertEquals(m4E.determinant(),m1E.determinant());
		assertEquals(m4E.determinant(),m2E.determinant());
		assertEquals(m4E.determinant(),m3E.determinant());
		assertEquals(m4E.determinant(),m4E.determinant());
		assertEquals(m4E.determinant(),m5E.determinant());
	    assertEquals(m4E.determinant(),m6E.determinant());
        assertEquals(m5E.determinant(),m1E.determinant());
        assertEquals(m5E.determinant(),m2E.determinant());
        assertEquals(m5E.determinant(),m3E.determinant());
        assertEquals(m5E.determinant(),m4E.determinant());
        assertEquals(m5E.determinant(),m5E.determinant());
        assertEquals(m5E.determinant(),m6E.determinant());
        assertEquals(m6E.determinant(),m1E.determinant());
        assertEquals(m6E.determinant(),m2E.determinant());
        assertEquals(m6E.determinant(),m3E.determinant());
        assertEquals(m6E.determinant(),m4E.determinant());
        assertEquals(m6E.determinant(),m5E.determinant());
        assertEquals(m6E.determinant(),m6E.determinant());
        
		Matrix3x3flat m1F = new Matrix3x3flat(test6);     
		Matrix3x3rc m2F = new Matrix3x3rc(test6);         
		Matrix3x3cr m3F = new Matrix3x3cr(test6);         
		MatrixArrayFlat m4F = new MatrixArrayFlat(test6); 
		MatrixArrayRC m5F = new MatrixArrayRC(test6);     
		MatrixArrayCR m6F = new MatrixArrayCR(test6);     
		assertEquals(m1F.determinant(),m1F.determinant());
		assertEquals(m1F.determinant(),m2F.determinant());
		assertEquals(m1F.determinant(),m3F.determinant());
		assertEquals(m1F.determinant(),m4F.determinant());
		assertEquals(m1F.determinant(),m5F.determinant());
		assertEquals(m1F.determinant(),m6F.determinant());
		assertEquals(m2F.determinant(),m1F.determinant());
		assertEquals(m2F.determinant(),m2F.determinant());
		assertEquals(m2F.determinant(),m3F.determinant());
		assertEquals(m2F.determinant(),m4F.determinant());
		assertEquals(m2F.determinant(),m5F.determinant());
		assertEquals(m2F.determinant(),m6F.determinant());
		assertEquals(m3F.determinant(),m1F.determinant());
		assertEquals(m3F.determinant(),m2F.determinant());
		assertEquals(m3F.determinant(),m3F.determinant());
		assertEquals(m3F.determinant(),m4F.determinant());
		assertEquals(m3F.determinant(),m5F.determinant());
		assertEquals(m3F.determinant(),m6F.determinant());
		assertEquals(m4F.determinant(),m1F.determinant());
		assertEquals(m4F.determinant(),m2F.determinant());
		assertEquals(m4F.determinant(),m3F.determinant());
		assertEquals(m4F.determinant(),m4F.determinant());
		assertEquals(m4F.determinant(),m5F.determinant());
	    assertEquals(m4F.determinant(),m6F.determinant());
        assertEquals(m5F.determinant(),m1F.determinant());
        assertEquals(m5F.determinant(),m2F.determinant());
        assertEquals(m5F.determinant(),m3F.determinant());
        assertEquals(m5F.determinant(),m4F.determinant());
        assertEquals(m5F.determinant(),m5F.determinant());
        assertEquals(m5F.determinant(),m6F.determinant());
        assertEquals(m6F.determinant(),m1F.determinant());
        assertEquals(m6F.determinant(),m2F.determinant());
        assertEquals(m6F.determinant(),m3F.determinant());
        assertEquals(m6F.determinant(),m4F.determinant());
        assertEquals(m6F.determinant(),m5F.determinant());
        assertEquals(m6F.determinant(),m6F.determinant());
        
		Matrix3x3flat m1G = new Matrix3x3flat(test7);     
		Matrix3x3rc m2G = new Matrix3x3rc(test7);         
		Matrix3x3cr m3G = new Matrix3x3cr(test7);         
		MatrixArrayFlat m4G = new MatrixArrayFlat(test7); 
		MatrixArrayRC m5G = new MatrixArrayRC(test7);     
		MatrixArrayCR m6G = new MatrixArrayCR(test7);     
		assertEquals(m1C.determinant(),m1C.determinant());
		assertEquals(m1G.determinant(),m2G.determinant());
		assertEquals(m1G.determinant(),m3G.determinant());
		assertEquals(m1G.determinant(),m4G.determinant());
		assertEquals(m1G.determinant(),m5G.determinant());
		assertEquals(m1G.determinant(),m6G.determinant());
		assertEquals(m2G.determinant(),m1G.determinant());
		assertEquals(m2G.determinant(),m2G.determinant());
		assertEquals(m2G.determinant(),m3G.determinant());
		assertEquals(m2G.determinant(),m4G.determinant());
		assertEquals(m2G.determinant(),m5G.determinant());
		assertEquals(m2G.determinant(),m6G.determinant());
		assertEquals(m3G.determinant(),m1G.determinant());
		assertEquals(m3G.determinant(),m2G.determinant());
		assertEquals(m3G.determinant(),m3G.determinant());
		assertEquals(m3G.determinant(),m4G.determinant());
		assertEquals(m3G.determinant(),m5G.determinant());
		assertEquals(m3G.determinant(),m6G.determinant());
		assertEquals(m4G.determinant(),m1G.determinant());
		assertEquals(m4G.determinant(),m2G.determinant());
		assertEquals(m4G.determinant(),m3G.determinant());
		assertEquals(m4G.determinant(),m4G.determinant());
		assertEquals(m4G.determinant(),m5G.determinant());
	    assertEquals(m4G.determinant(),m6G.determinant());
        assertEquals(m5G.determinant(),m1G.determinant());
        assertEquals(m5G.determinant(),m2G.determinant());
        assertEquals(m5G.determinant(),m3G.determinant());
        assertEquals(m5G.determinant(),m4G.determinant());
        assertEquals(m5G.determinant(),m5G.determinant());
        assertEquals(m5G.determinant(),m6G.determinant());
        assertEquals(m6G.determinant(),m1G.determinant());
        assertEquals(m6G.determinant(),m2G.determinant());
        assertEquals(m6G.determinant(),m3G.determinant());
        assertEquals(m6G.determinant(),m4G.determinant());
        assertEquals(m6G.determinant(),m5G.determinant());
        assertEquals(m6G.determinant(),m6G.determinant());
        
		Matrix3x3flat m1H = new Matrix3x3flat(test8);     
		Matrix3x3rc m2H = new Matrix3x3rc(test8);         
		Matrix3x3cr m3H = new Matrix3x3cr(test8);         
		MatrixArrayFlat m4H = new MatrixArrayFlat(test8); 
		MatrixArrayRC m5H = new MatrixArrayRC(test8);     
		MatrixArrayCR m6H = new MatrixArrayCR(test8);     
		assertEquals(m1H.determinant(),m1H.determinant());
		assertEquals(m1H.determinant(),m2H.determinant());
		assertEquals(m1H.determinant(),m3H.determinant());
		assertEquals(m1H.determinant(),m4H.determinant());
		assertEquals(m1H.determinant(),m5H.determinant());
		assertEquals(m1H.determinant(),m6H.determinant());
		assertEquals(m2H.determinant(),m1H.determinant());
		assertEquals(m2H.determinant(),m2H.determinant());
		assertEquals(m2H.determinant(),m3H.determinant());
		assertEquals(m2H.determinant(),m4H.determinant());
		assertEquals(m2H.determinant(),m5H.determinant());
		assertEquals(m2H.determinant(),m6H.determinant());
		assertEquals(m3H.determinant(),m1H.determinant());
		assertEquals(m3H.determinant(),m2H.determinant());
		assertEquals(m3H.determinant(),m3H.determinant());
		assertEquals(m3H.determinant(),m4H.determinant());
		assertEquals(m3H.determinant(),m5H.determinant());
		assertEquals(m3H.determinant(),m6H.determinant());
		assertEquals(m4H.determinant(),m1H.determinant());
		assertEquals(m4H.determinant(),m2H.determinant());
		assertEquals(m4H.determinant(),m3H.determinant());
		assertEquals(m4H.determinant(),m4H.determinant());
		assertEquals(m4H.determinant(),m5H.determinant());
	    assertEquals(m4H.determinant(),m6H.determinant());
        assertEquals(m5H.determinant(),m1H.determinant());
        assertEquals(m5H.determinant(),m2H.determinant());
        assertEquals(m5H.determinant(),m3H.determinant());
        assertEquals(m5H.determinant(),m4H.determinant());
        assertEquals(m5H.determinant(),m5H.determinant());
        assertEquals(m5H.determinant(),m6H.determinant());
        assertEquals(m6H.determinant(),m1H.determinant());
        assertEquals(m6H.determinant(),m2H.determinant());
        assertEquals(m6H.determinant(),m3H.determinant());
        assertEquals(m6H.determinant(),m4H.determinant());
        assertEquals(m6H.determinant(),m5H.determinant());
        assertEquals(m6H.determinant(),m6H.determinant());
        
		Matrix3x3flat m1I = new Matrix3x3flat(test9);     
		Matrix3x3rc m2I = new Matrix3x3rc(test9);         
		Matrix3x3cr m3I = new Matrix3x3cr(test9);         
		MatrixArrayFlat m4I = new MatrixArrayFlat(test9); 
		MatrixArrayRC m5I = new MatrixArrayRC(test9);     
		MatrixArrayCR m6I = new MatrixArrayCR(test9);     
		assertEquals(m1I.determinant(),m1I.determinant());
		assertEquals(m1I.determinant(),m2I.determinant());
		assertEquals(m1I.determinant(),m3I.determinant());
		assertEquals(m1I.determinant(),m4I.determinant());
		assertEquals(m1I.determinant(),m5I.determinant());
		assertEquals(m1I.determinant(),m6I.determinant());
		assertEquals(m2I.determinant(),m1I.determinant());
		assertEquals(m2I.determinant(),m2I.determinant());
		assertEquals(m2I.determinant(),m3I.determinant());
		assertEquals(m2I.determinant(),m4I.determinant());
		assertEquals(m2I.determinant(),m5I.determinant());
		assertEquals(m2I.determinant(),m6I.determinant());
		assertEquals(m3I.determinant(),m1I.determinant());
		assertEquals(m3I.determinant(),m2I.determinant());
		assertEquals(m3I.determinant(),m3I.determinant());
		assertEquals(m3I.determinant(),m4I.determinant());
		assertEquals(m3I.determinant(),m5I.determinant());
		assertEquals(m3I.determinant(),m6I.determinant());
		assertEquals(m4I.determinant(),m1I.determinant());
		assertEquals(m4I.determinant(),m2I.determinant());
		assertEquals(m4I.determinant(),m3I.determinant());
		assertEquals(m4I.determinant(),m4I.determinant());
		assertEquals(m4I.determinant(),m5I.determinant());
	    assertEquals(m4I.determinant(),m6I.determinant());
        assertEquals(m5I.determinant(),m1I.determinant());
        assertEquals(m5I.determinant(),m2I.determinant());
        assertEquals(m5I.determinant(),m3I.determinant());
        assertEquals(m5I.determinant(),m4I.determinant());
        assertEquals(m5I.determinant(),m5I.determinant());
        assertEquals(m5I.determinant(),m6I.determinant());
        assertEquals(m6I.determinant(),m1I.determinant());
        assertEquals(m6I.determinant(),m2I.determinant());
        assertEquals(m6I.determinant(),m3I.determinant());
        assertEquals(m6I.determinant(),m4I.determinant());
        assertEquals(m6I.determinant(),m5I.determinant());
        assertEquals(m6I.determinant(),m6I.determinant());
        
		Matrix3x3flat m1J = new Matrix3x3flat(test10);     
		Matrix3x3rc m2J = new Matrix3x3rc(test10);         
		Matrix3x3cr m3J = new Matrix3x3cr(test10);         
		MatrixArrayFlat m4J = new MatrixArrayFlat(test10); 
		MatrixArrayRC m5J = new MatrixArrayRC(test10);     
		MatrixArrayCR m6J = new MatrixArrayCR(test10);     
		assertEquals(m1J.determinant(),m1J.determinant());
		assertEquals(m1J.determinant(),m2J.determinant());
		assertEquals(m1J.determinant(),m3J.determinant());
		assertEquals(m1J.determinant(),m4J.determinant());
		assertEquals(m1J.determinant(),m5J.determinant());
		assertEquals(m1J.determinant(),m6J.determinant());
		assertEquals(m2J.determinant(),m1J.determinant());
		assertEquals(m2J.determinant(),m2J.determinant());
		assertEquals(m2J.determinant(),m3J.determinant());
		assertEquals(m2J.determinant(),m4J.determinant());
		assertEquals(m2J.determinant(),m5J.determinant());
		assertEquals(m2J.determinant(),m6J.determinant());
		assertEquals(m3J.determinant(),m1J.determinant());
		assertEquals(m3J.determinant(),m2J.determinant());
		assertEquals(m3J.determinant(),m3J.determinant());
		assertEquals(m3J.determinant(),m4J.determinant());
		assertEquals(m3J.determinant(),m5J.determinant());
		assertEquals(m3J.determinant(),m6J.determinant());
		assertEquals(m4J.determinant(),m1J.determinant());
		assertEquals(m4J.determinant(),m2J.determinant());
		assertEquals(m4J.determinant(),m3J.determinant());
		assertEquals(m4J.determinant(),m4J.determinant());
		assertEquals(m4J.determinant(),m5J.determinant());
	    assertEquals(m4J.determinant(),m6J.determinant());
        assertEquals(m5J.determinant(),m1J.determinant());
        assertEquals(m5J.determinant(),m2J.determinant());
        assertEquals(m5J.determinant(),m3J.determinant());
        assertEquals(m5J.determinant(),m4J.determinant());
        assertEquals(m5J.determinant(),m5J.determinant());
        assertEquals(m5J.determinant(),m6J.determinant());
        assertEquals(m6J.determinant(),m1J.determinant());
        assertEquals(m6J.determinant(),m2J.determinant());
        assertEquals(m6J.determinant(),m3J.determinant());
        assertEquals(m6J.determinant(),m4J.determinant());
        assertEquals(m6J.determinant(),m5J.determinant());
        assertEquals(m6J.determinant(),m6J.determinant());
	}
}